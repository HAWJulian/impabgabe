// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace abgabe {
    using Invert.Json;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using UniRx;
    using UnityEngine;
    
    
    [uFrame.Attributes.ComponentId(9)]
    [uFrame.Attributes.uFrameIdentifier("0d6d6dfa-6b81-48a0-bdb0-4c7c19b03f28")]
    public partial class MovableObject : uFrame.ECS.EcsComponent {
        
        [UnityEngine.SerializeField()]
        private Int32 _rotation;
        
        [UnityEngine.SerializeField()]
        private Boolean _isPlaced;
        
        private Subject<PropertyChangedEvent<Int32>> _rotationObservable;
        
        private PropertyChangedEvent<Int32> _rotationEvent;
        
        private Subject<PropertyChangedEvent<Boolean>> _isPlacedObservable;
        
        private PropertyChangedEvent<Boolean> _isPlacedEvent;
        
        public override int ComponentId {
            get {
                return 9;
            }
        }
        
        public IObservable<PropertyChangedEvent<Int32>> rotationObservable {
            get {
                return _rotationObservable ?? (_rotationObservable = new Subject<PropertyChangedEvent<Int32>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Boolean>> isPlacedObservable {
            get {
                return _isPlacedObservable ?? (_isPlacedObservable = new Subject<PropertyChangedEvent<Boolean>>());
            }
        }
        
        public Int32 rotation {
            get {
                return _rotation;
            }
            set {
                Setrotation(value);
            }
        }
        
        public Boolean isPlaced {
            get {
                return _isPlaced;
            }
            set {
                SetisPlaced(value);
            }
        }
        
        public virtual void Setrotation(Int32 value) {
            SetProperty(ref _rotation, value, ref _rotationEvent, _rotationObservable);
        }
        
        public virtual void SetisPlaced(Boolean value) {
            SetProperty(ref _isPlaced, value, ref _isPlacedEvent, _isPlacedObservable);
        }
    }
}
